{
	"info": {
		"_postman_id": "269fb673-342e-4fc0-b006-e25cc5a6af16",
		"name": "EcoStruxureâ„¢ Asset Advisor API",
		"description": "# Overview\nAsset Advisor API allows customers to collect and manage status and health of critical assets in electrical distribution networks.\n\n## Trial version\n\nThis API is a trial version available free of charge for selected customers and limited period.\n\nFor more information please contact the [Schneider Electric Exchange support team](mailto:exchange.support@se.com).\n\n## API overview and usage\nThese API enables the following operations:\n\n**Sites**\n- Browse and discover sites information, allowing the customers to map the sites with their own representation and IDs.\n\n**Alarm Tickets**\n- Access all alarm tickets generated on all assets from all sites, allowing customers to create their own customized dashboards.\n\n## How it works\nThis API works for any Schneider Electric customer who has an identity in Schneider Electric cIAM system. Nevertheless, customers must subscribe to this API to use it. The current version of the API is including only two operations that are described below.\n\n### Sites\nThis API allows the customer to browse all their Sites registered in Asset Advisor.\n\nIn the current version, it's only possible to access a list of all Sites with basic information such as ID, name, address, and location. However, this allows customers not only to do a mapping of Asset Advisor sites with their own representation and IDs, but also to locate all Sites in a map.\n\n### Alarm Tickets\n\nThis API allows the customer to retrieve alarms, which are called \"Tickets\" in Asset Advisor. They are all tickets triggered by the Asset Advisor Analytics modules or manually created by Schneider Electric experts.\n\nThrough this API operation it is possible to query alarm tickets using some filters such as:\n\n- By date range (ticket creation date)\n\n- By status (e.g. only \"Opened\" tickets)\n\n- By priority (e.g. Only \"High\" priority tickets)\n\nBesides above filters, it's also possible to limit the number of tickets in the response or retrieving specific range of tickets by setting the offset & limit filters for pagination capability.\n\nThese queries return a list of \"light\" tickets, providing only basic information such as title, description, asset, site, priority, status and creation date. In this version, full details of a specific ticket (e.g. history, comments, attachments, etc.) are not yet included.\n\n# Documentation\n\n## How to sign up\nThe current version of the API does not allow subscriptions on demand.\n\nSelected customers will be signed up manually, based on specific agreements with Schneider Electric, and will be able to access the API with the following information:\n\n**Step 1:** Receive the Exchange URL access for the API product.\n\n**Step 2:** [Register or login](https://exchange.se.com) with an Exchange account.\n\n**Step 3:** Generate a Personal Access Token (PAT) in the developer portal (API credentials and usage details are also available).\n\n## Code Sample\n\nYou can leverage the following code samples to integrate the API faster in your application:\n\n* [Postman Collection](https://github.com/ecostruxure-openapi/asset-advisor-api/tree/main/code-samples/postman-collection)\n\n## Support\n\nContact the SE Exchange support team at exchange.support@se.com and include,\n\n    - Endpoint URL\n    - Request/Response of the URL\n    - Any additional information like Screenshots, Postman collections\n\n---\n\n\nContact Support:\n Name: Get Support on this API\n Email: exchange.support@se.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11960671"
	},
	"item": [
		{
			"name": "sites",
			"item": [
				{
					"name": "{siteId}",
					"item": [
						{
							"name": "assets",
							"item": [
								{
									"name": "{assetId}",
									"item": [
										{
											"name": "Get Asset detail",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														":assetId"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "0aa61277-9c07-44e5-9317-251417db4a5d",
															"description": "(Required) ID of the Site"
														},
														{
															"key": "assetId",
															"value": "a7e159b5-c82d-408d-8d1d-010ad96671a0",
															"description": "(Required) ID of the Asset"
														}
													]
												},
												"description": "Get details of a particular Asset"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "https://se-exchange-uat-uat.apigee.net/ecostruxure/asset-advisor/v1/sites/:siteId/assets/:assetId",
															"protocol": "https",
															"host": [
																"se-exchange-uat-uat",
																"apigee",
																"net"
															],
															"path": [
																"ecostruxure",
																"asset-advisor",
																"v1",
																"sites",
																":siteId",
																"assets",
																":assetId"
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n  \"name\": \"Main LV Breaker\",\n  \"description\": \"Used to protect main area\",\n  \"functionalName\": \"MVCB-Main - 001\",\n  \"serialNumber\": \"X-123-456-789\",\n  \"type\": \"DryTransformer\",\n  \"criticality\": 1,\n  \"commissioningDate\": \"2019-01-15\",\n  \"manufacturer\": \"Schneider Electric\",\n  \"range\": \"LF\",\n  \"deviceRangeName\": \"LF2\",\n  \"deviceShortName\": \"LF2 07 40 06\",\n  \"commercialReference\": \"MC Set\",\n  \"ratedCurrent\": 1250,\n  \"ratedVoltage\": 25000,\n  \"serviceLevel\": \"ESP Predict\",\n  \"lastMaintenanceDate\": \"2020-01-20\",\n  \"nextMaintenanceDate\": \"2025-01-20\",\n  \"usageAndEnvironmentalLevel\": \"Normal\",\n  \"healthIndex\": 1,\n  \"maintenanceIndex\": 2\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId"
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId"
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/access-forbidden\",\n  \"title\": \"Access Forbidden\",\n  \"status\": 403,\n  \"detail\": \"User is not authorized to perform the action.\"\n}"
												},
												{
													"name": "The Site or Asset was not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId"
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/not-found\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"detail\": \"Resource not found for provided identifier.\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId"
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
												}
											]
										},
										{
											"name": "Assets Tickets",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId/tickets?status=Pending&offset=0&limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														":assetId",
														"tickets"
													],
													"query": [
														{
															"key": "status",
															"value": "Pending",
															"description": "Allow to filter on particular Status"
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The number of items to skip before starting to collect the result set."
														},
														{
															"key": "limit",
															"value": "100",
															"description": "The numbers of items to return."
														}
													],
													"variable": [
														{
															"key": "siteId",
															"value": "0aa61277-9c07-44e5-9317-251417db4a5d",
															"description": "(Required) ID of the Site"
														},
														{
															"key": "assetId",
															"value": "a7e159b5-c82d-408d-8d1d-010ad96671a0",
															"description": "(Required) ID of the Asset"
														}
													]
												},
												"description": "List all Tickets of a particular Asset, with different query criteria (status) and pagination capability. The current sort criteria used for the tickets is the creation date in descending order."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "https://se-exchange-uat-uat.apigee.net/ecostruxure/asset-advisor/v1/sites/:siteId/assets/:assetId/tickets?status=<string>,<string>&offset=0&limit=50",
															"protocol": "https",
															"host": [
																"se-exchange-uat-uat",
																"apigee",
																"net"
															],
															"path": [
																"ecostruxure",
																"asset-advisor",
																"v1",
																"sites",
																":siteId",
																"assets",
																":assetId",
																"tickets"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>,<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "50"
																}
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tickets\": [\n    {\n      \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"clientTicketId\": 105394,\n      \"title\": \"Over Voltage on Asset 1B1 LV-MCC-001A\",\n      \"description\": \"L3-L1 Over Voltage on Circuit Breaker 1B1 LV-MCC-001A. Threshold: 505 V, Value: 512.2 V\",\n      \"assetId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"siteId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"priority\": \"Low\",\n      \"status\": \"<string>\",\n      \"creationDate\": \"1985-06-12T01:48:02.005Z\"\n    },\n    {\n      \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"clientTicketId\": 105394,\n      \"title\": \"Over Voltage on Asset 1B1 LV-MCC-001A\",\n      \"description\": \"L3-L1 Over Voltage on Circuit Breaker 1B1 LV-MCC-001A. Threshold: 505 V, Value: 512.2 V\",\n      \"assetId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"siteId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"priority\": \"Info\",\n      \"status\": \"<string>\",\n      \"creationDate\": \"2011-09-26T10:20:39.855Z\"\n    }\n  ],\n  \"totalCount\": 2413\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId/tickets?status=<string>,<string>&offset=0&limit=50",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId",
																"tickets"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>,<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "50"
																}
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/validation-error\",\n  \"title\": \"Invalid Request\",\n  \"status\": 400,\n  \"detail\": \"Provided input request parameter is not valid.\",\n  \"invalid-params\": [\n    {\n      \"in\": \"query\",\n      \"name\": \"param1\",\n      \"reason\": \"param1 does not match the expected pattern.\"\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId/tickets?status=<string>,<string>&offset=0&limit=50",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId",
																"tickets"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>,<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "50"
																}
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId/tickets?status=<string>,<string>&offset=0&limit=50",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId",
																"tickets"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>,<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "50"
																}
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/access-forbidden\",\n  \"title\": \"Access Forbidden\",\n  \"status\": 403,\n  \"detail\": \"User is not authorized to perform the action.\"\n}"
												},
												{
													"name": "The Site or Asset was not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId/tickets?status=<string>,<string>&offset=0&limit=50",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId",
																"tickets"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>,<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "50"
																}
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/not-found\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"detail\": \"Resource not found for provided identifier.\"\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sites/:siteId/assets/:assetId/tickets?status=<string>,<string>&offset=0&limit=50",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sites",
																":siteId",
																"assets",
																":assetId",
																"tickets"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>,<string>"
																},
																{
																	"key": "offset",
																	"value": "0"
																},
																{
																	"key": "limit",
																	"value": "50"
																}
															],
															"variable": [
																{
																	"key": "siteId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Site"
																},
																{
																	"key": "assetId",
																	"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
																	"description": "(Required) ID of the Asset"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Assets list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId/assets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId",
												"assets"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "0aa61277-9c07-44e5-9317-251417db4a5d",
													"description": "(Required) ID of the Site"
												}
											]
										},
										"description": "List all Assets for a particular Site"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "https://se-exchange-uat-uat.apigee.net/ecostruxure/asset-advisor/v1/sites/:siteId/assets",
													"protocol": "https",
													"host": [
														"se-exchange-uat-uat",
														"apigee",
														"net"
													],
													"path": [
														"ecostruxure",
														"asset-advisor",
														"v1",
														"sites",
														":siteId",
														"assets"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n    \"name\": \"Main LV Breaker\",\n    \"description\": \"Used to protect main area\",\n    \"functionalName\": \"MVCB-Main - 001\",\n    \"serialNumber\": \"X-123-456-789\",\n    \"type\": \"MVCB\",\n    \"criticality\": 1\n  },\n  {\n    \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n    \"name\": \"Main LV Breaker\",\n    \"description\": \"Used to protect main area\",\n    \"functionalName\": \"MVCB-Main - 001\",\n    \"serialNumber\": \"X-123-456-789\",\n    \"type\": \"MVCB\",\n    \"criticality\": 1\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/access-forbidden\",\n  \"title\": \"Access Forbidden\",\n  \"status\": 403,\n  \"detail\": \"User is not authorized to perform the action.\"\n}"
										},
										{
											"name": "The Site was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/not-found\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"detail\": \"Resource not found for provided identifier.\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
										}
									]
								},
								{
									"name": "Assets Tree",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId/assets/treeview",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId",
												"assets",
												"treeview"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "0aa61277-9c07-44e5-9317-251417db4a5d",
													"description": "(Required) ID of the Site"
												}
											]
										},
										"description": "Give the Assets tree view for a particular Site"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/treeview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														"treeview"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n    \"name\": \"Main LV Breaker\",\n    \"description\": \"Used to protect main area\",\n    \"functionalName\": \"MVCB-Main - 001\",\n    \"serialNumber\": \"X-123-456-789\",\n    \"type\": \"DryTransformer\",\n    \"criticality\": 1,\n    \"childrens\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/AssetsTreeElt detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/AssetsTreeElt detected>\"\n      }\n    ],\n    \"parentId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\"\n  },\n  {\n    \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n    \"name\": \"Main LV Breaker\",\n    \"description\": \"Used to protect main area\",\n    \"functionalName\": \"MVCB-Main - 001\",\n    \"serialNumber\": \"X-123-456-789\",\n    \"type\": \"LVCB\",\n    \"criticality\": 1,\n    \"childrens\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/AssetsTreeElt detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/AssetsTreeElt detected>\"\n      }\n    ],\n    \"parentId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\"\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/treeview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														"treeview"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/treeview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														"treeview"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/access-forbidden\",\n  \"title\": \"Access Forbidden\",\n  \"status\": 403,\n  \"detail\": \"User is not authorized to perform the action.\"\n}"
										},
										{
											"name": "The Site was not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/treeview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														"treeview"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/not-found\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"detail\": \"Resource not found for provided identifier.\"\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sites/:siteId/assets/treeview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sites",
														":siteId",
														"assets",
														"treeview"
													],
													"variable": [
														{
															"key": "siteId",
															"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
															"description": "(Required) ID of the Site"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Site detail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sites/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sites",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId",
											"value": "0aa61277-9c07-44e5-9317-251417db4a5d",
											"description": "(Required) ID of the Site"
										}
									]
								},
								"description": "Get details of a particular Site"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
													"description": "(Required) ID of the Site"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n  \"name\": \"Headquarters\",\n  \"country\": \"Some Country\",\n  \"city\": \"Some city\",\n  \"address\": \"Full Address of site\",\n  \"zipCode\": \"90210\",\n  \"timeZone\": \"CST\",\n  \"latitude\": 45.1234,\n  \"longitude\": -3.1234,\n  \"goLiveDate\": \"2022-08-24\",\n  \"description\": \"This is the site description\",\n  \"serviceLevel\": \"EAA Preventive\",\n  \"riskLevel\": 30,\n  \"supportContacts\": [\n    {\n      \"name\": \"Bob Clark\",\n      \"email\": \"bob.clark@comp.com\",\n      \"phone\": \"+1 832 123-4567\"\n    },\n    {\n      \"name\": \"Bob Clark\",\n      \"email\": \"bob.clark@comp.com\",\n      \"phone\": \"+1 832 123-4567\"\n    }\n  ],\n  \"healthMatrix\": [\n    {\n      \"criticality\": 2,\n      \"healthIndex\": 2,\n      \"nbAsset\": 8\n    },\n    {\n      \"criticality\": 2,\n      \"healthIndex\": 2,\n      \"nbAsset\": 8\n    }\n  ],\n  \"communicationStatus\": [\n    {\n      \"gwId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"name\": \"Main Gateway\",\n      \"functionalName\": \"GW-001\",\n      \"communicationStatus\": true,\n      \"receptionDate\": \"1958-04-10T17:00:46.122Z\"\n    },\n    {\n      \"gwId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"name\": \"Main Gateway\",\n      \"functionalName\": \"GW-001\",\n      \"communicationStatus\": true,\n      \"receptionDate\": \"2020-05-05T02:36:19.605Z\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
													"description": "(Required) ID of the Site"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
													"description": "(Required) ID of the Site"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/access-forbidden\",\n  \"title\": \"Access Forbidden\",\n  \"status\": 403,\n  \"detail\": \"User is not authorized to perform the action.\"\n}"
								},
								{
									"name": "The Site was not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
													"description": "(Required) ID of the Site"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/not-found\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"detail\": \"Resource not found for provided identifier.\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sites/:siteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sites",
												":siteId"
											],
											"variable": [
												{
													"key": "siteId",
													"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
													"description": "(Required) ID of the Site"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Sites list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sites"
							]
						},
						"description": "List all your Sites registered in Asset Advisor, including basic information such as ID, name, address, and location."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n    \"name\": \"Headquarters\",\n    \"country\": \"Some Country\",\n    \"city\": \"Some city\",\n    \"address\": \"Full Address of site\",\n    \"zipCode\": \"90210\",\n    \"timeZone\": \"CST\",\n    \"latitude\": 45.1234,\n    \"longitude\": -3.1234\n  },\n  {\n    \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n    \"name\": \"Headquarters\",\n    \"country\": \"Some Country\",\n    \"city\": \"Some city\",\n    \"address\": \"Full Address of site\",\n    \"zipCode\": \"90210\",\n    \"timeZone\": \"CST\",\n    \"latitude\": 45.1234,\n    \"longitude\": -3.1234\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sites"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sites"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "tickets",
			"item": [
				{
					"name": "Tickets list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets?createdFrom=2022-09-30T14:19:34.116Z&createdTo=2023-02-28T14:19:34.116Z&status=Closed&priority=Medium&offset=0&limit=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets"
							],
							"query": [
								{
									"key": "createdFrom",
									"value": "2022-09-30T14:19:34.116Z",
									"description": "Allow to filter on particular CreationDate range (default to last 30 days)"
								},
								{
									"key": "createdTo",
									"value": "2023-02-28T14:19:34.116Z",
									"description": "Allow to filter on particular CreationDate range (default to last 30 days)"
								},
								{
									"key": "status",
									"value": "Closed",
									"description": "Allow to filter on particular Status"
								},
								{
									"key": "priority",
									"value": "Medium",
									"description": "Allow to filter on particular Priority"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "The number of items to skip before starting to collect the result set."
								},
								{
									"key": "limit",
									"value": "50",
									"description": "The numbers of items to return."
								}
							]
						},
						"description": "List all Tickets for all Assets and Sites, with different query criteria (date, status, priority) and pagination capability. The current sort criteria used for the tickets is the creation date in descending order."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets?createdFrom=1988-09-30T14:19:34.116Z&createdTo=1988-09-30T14:19:34.116Z&status=<string>,<string>&priority=<string>,<string>&offset=0&limit=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "createdFrom",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "createdTo",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "status",
											"value": "<string>,<string>"
										},
										{
											"key": "priority",
											"value": "<string>,<string>"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tickets\": [\n    {\n      \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"clientTicketId\": 105394,\n      \"title\": \"Over Voltage on Asset 1B1 LV-MCC-001A\",\n      \"description\": \"L3-L1 Over Voltage on Circuit Breaker 1B1 LV-MCC-001A. Threshold: 505 V, Value: 512.2 V\",\n      \"assetId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"siteId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"priority\": \"<string>\",\n      \"status\": \"<string>\",\n      \"creationDate\": \"1957-12-19T09:03:33.683Z\"\n    },\n    {\n      \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"clientTicketId\": 105394,\n      \"title\": \"Over Voltage on Asset 1B1 LV-MCC-001A\",\n      \"description\": \"L3-L1 Over Voltage on Circuit Breaker 1B1 LV-MCC-001A. Threshold: 505 V, Value: 512.2 V\",\n      \"assetId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"siteId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n      \"priority\": \"<string>\",\n      \"status\": \"<string>\",\n      \"creationDate\": \"1985-08-27T07:48:50.802Z\"\n    }\n  ],\n  \"totalCount\": 2413\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets?createdFrom=1988-09-30T14:19:34.116Z&createdTo=1988-09-30T14:19:34.116Z&status=<string>,<string>&priority=<string>,<string>&offset=0&limit=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "createdFrom",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "createdTo",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "status",
											"value": "<string>,<string>"
										},
										{
											"key": "priority",
											"value": "<string>,<string>"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/validation-error\",\n  \"title\": \"Invalid Request\",\n  \"status\": 400,\n  \"detail\": \"Provided input request parameter is not valid.\",\n  \"invalid-params\": [\n    {\n      \"in\": \"query\",\n      \"name\": \"param1\",\n      \"reason\": \"param1 does not match the expected pattern.\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets?createdFrom=1988-09-30T14:19:34.116Z&createdTo=1988-09-30T14:19:34.116Z&status=<string>,<string>&priority=<string>,<string>&offset=0&limit=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "createdFrom",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "createdTo",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "status",
											"value": "<string>,<string>"
										},
										{
											"key": "priority",
											"value": "<string>,<string>"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets?createdFrom=1988-09-30T14:19:34.116Z&createdTo=1988-09-30T14:19:34.116Z&status=<string>,<string>&priority=<string>,<string>&offset=0&limit=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "createdFrom",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "createdTo",
											"value": "1988-09-30T14:19:34.116Z"
										},
										{
											"key": "status",
											"value": "<string>,<string>"
										},
										{
											"key": "priority",
											"value": "<string>,<string>"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
						}
					]
				},
				{
					"name": "Get Ticket detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets/:ticketId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets",
								":ticketId"
							],
							"variable": [
								{
									"key": "ticketId",
									"value": "08d97490-969e-4595-84f4-7b56ce606e80",
									"description": "(Required) ID of the Ticket"
								}
							]
						},
						"description": "Provide detail of a particular Ticket"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
											"description": "(Required) ID of the Ticket"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n  \"clientTicketId\": 105394,\n  \"title\": \"Over Voltage on Asset 1B1 LV-MCC-001A\",\n  \"description\": \"L3-L1 Over Voltage on Circuit Breaker 1B1 LV-MCC-001A. Threshold: 505 V, Value: 512.2 V\",\n  \"assetId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n  \"siteId\": \"1fa38c20-0b86-495f-a470-efb1bb6f8b1e\",\n  \"priority\": \"<string>\",\n  \"status\": \"<string>\",\n  \"creationDate\": \"2018-11-07T11:13:58.729Z\",\n  \"customerMessage\": \"Our expert is on this issue\",\n  \"condition\": true,\n  \"crmCaseId\": \"95144996\",\n  \"history\": [\n    {\n      \"activityType\": \"OpenTicket\",\n      \"date\": \"2002-07-09T04:49:21.214Z\",\n      \"comment\": \"Issue has been found\",\n      \"file\": \"FirePicture-05-21-2022.jpeg\"\n    },\n    {\n      \"activityType\": \"CloseTicket\",\n      \"date\": \"1987-02-11T09:52:40.731Z\",\n      \"comment\": \"Issue has been found\",\n      \"file\": \"FirePicture-05-21-2022.jpeg\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
											"description": "(Required) ID of the Ticket"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/unauthorized\",\n  \"title\": \"Unauthorized\",\n  \"status\": 401,\n  \"detail\": \"Access Token expired\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
											"description": "(Required) ID of the Ticket"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/access-forbidden\",\n  \"title\": \"Access Forbidden\",\n  \"status\": 403,\n  \"detail\": \"User is not authorized to perform the action.\"\n}"
						},
						{
							"name": "The Ticket was not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
											"description": "(Required) ID of the Ticket"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/not-found\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"detail\": \"Resource not found for provided identifier.\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": "5267e209-7336-341d-1ab8-3380716ec5ce",
											"description": "(Required) ID of the Ticket"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"https://ecostruxure-openapi.se.com/problem/internal-server-error\",\n  \"title\": \"Internal Server Error\",\n  \"status\": 500,\n  \"detail\": \"Something went wrong, please try again later.\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "xxxxxxxxxxxxxxxxxxxxx",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.exchange.se.com/ecostruxure/asset-advisor/v1",
			"type": "string"
		}
	]
}